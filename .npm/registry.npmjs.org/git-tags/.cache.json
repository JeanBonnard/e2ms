{"_id":"git-tags","_rev":"7-96ebfbfb643a5367f930018f80014fee","name":"git-tags","description":"Get and parse semver Git tags using Node.js","dist-tags":{"latest":"0.2.4"},"versions":{"0.2.2":{"name":"git-tags","version":"0.2.2","description":"Get and parse semver Git tags using Node.js","main":"index.js","directories":{"test":"test"},"scripts":{"test":"mocha"},"repository":{"type":"git","url":"git@github.com:brian-frichette/node-git-tags.git"},"keywords":["Git","Tag","semver"],"author":{"name":"Brian Frichette","email":"brian.frichette@gmail.com"},"license":"MIT","dependencies":{"semver":"^3.0.1"},"devDependencies":{"bluebird":"^2.3.2","chai":"^1.9.1","lodash":"^2.4.1","mocha":"^1.21.4","q":"^1.0.1"},"gitHead":"fec1e0052d7db2ba9f91a6856d3339165617848a","bugs":{"url":"https://github.com/brian-frichette/node-git-tags/issues"},"homepage":"https://github.com/brian-frichette/node-git-tags","_id":"git-tags@0.2.2","_shasum":"5cbe5c9daa5293c6e427b0e6ea17cbd0b7eec735","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"bfricka","email":"brian.frichette@gmail.com"},"maintainers":[{"name":"bfricka","email":"brian.frichette@gmail.com"}],"dist":{"shasum":"5cbe5c9daa5293c6e427b0e6ea17cbd0b7eec735","tarball":"https://registry.npmjs.org/git-tags/-/git-tags-0.2.2.tgz"}},"0.2.3":{"name":"git-tags","version":"0.2.3","description":"Get and parse semver Git tags using Node.js","main":"index.js","directories":{"test":"test"},"scripts":{"test":"mocha"},"repository":{"type":"git","url":"git@github.com:brian-frichette/node-git-tags.git"},"keywords":["Git","Tag","semver"],"author":{"name":"Brian Frichette","email":"brian.frichette@gmail.com"},"license":"MIT","dependencies":{"lodash":"^2.4.1","semver":"^3.0.1"},"devDependencies":{"bluebird":"^2.3.2","chai":"^1.9.1","mocha":"^1.21.4","q":"^1.0.1"},"gitHead":"52a6e10b91c5cdc92cdcf81df7de9d5e0398b982","bugs":{"url":"https://github.com/brian-frichette/node-git-tags/issues"},"homepage":"https://github.com/brian-frichette/node-git-tags","_id":"git-tags@0.2.3","_shasum":"cd663eee1eec4578dadb8c5819d7b6278ad949b2","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"bfricka","email":"brian.frichette@gmail.com"},"maintainers":[{"name":"bfricka","email":"brian.frichette@gmail.com"}],"dist":{"shasum":"cd663eee1eec4578dadb8c5819d7b6278ad949b2","tarball":"https://registry.npmjs.org/git-tags/-/git-tags-0.2.3.tgz"}},"0.2.4":{"name":"git-tags","version":"0.2.4","description":"Get and parse semver Git tags using Node.js","main":"index.js","directories":{"test":"test"},"scripts":{"test":"mocha"},"repository":{"type":"git","url":"git@github.com:bfricka/node-git-tags.git"},"keywords":["Git","Tag","semver"],"author":{"name":"Brian Frichette","email":"brian.frichette@gmail.com"},"license":"MIT","dependencies":{"lodash":"^2.4.1","semver":"^3.0.1"},"devDependencies":{"bluebird":"^2.3.2","chai":"^1.9.1","mocha":"^1.21.4","q":"^1.0.1"},"gitHead":"ffec270e5e70be91e6c9cc94fa9c87612ec39487","bugs":{"url":"https://github.com/bfricka/node-git-tags/issues"},"homepage":"https://github.com/bfricka/node-git-tags","_id":"git-tags@0.2.4","_shasum":"b24c71d5d7df8dd587a36998e9521e20dde259c5","_from":".","_npmVersion":"2.1.6","_nodeVersion":"0.10.33","_npmUser":{"name":"bfricka","email":"brian.frichette@gmail.com"},"maintainers":[{"name":"bfricka","email":"brian.frichette@gmail.com"}],"dist":{"shasum":"b24c71d5d7df8dd587a36998e9521e20dde259c5","tarball":"https://registry.npmjs.org/git-tags/-/git-tags-0.2.4.tgz"}}},"readme":"# Node Git Tags\n\nGets and parses [semver](http://semver.org/) tags using Git and Node.js\n\n## Usage\n\nAssuming you have the following git tags:\n\n* `v1.0.1`\n* `v1.0.0`\n* `v0.1.0-beta`\n* `NonSemverTag`\n\n**Get all semver tags**\n#### `gittags.get([repo], callback(err, tags))`\n\nArgument            | Type                | Description\n------------------- | ------------------- | -------------\n`repo` *(optional)* | `string`            | Optional repo path. Defaults to `process.cwd()`\n`callback`          | `function`          | Required callback fn\n`callback(err)`     | `null \\| Error`     | Error, if there is one\n`callback(tags)`    | `Array.<string>`    | Array of semver tags found (e.g. `['1.0.1', '1.0.0']`)\n\n```js\nvar gittags = require('git-tags');\n\ngittags.get(function(err, tags) {\n  if (err) throw err;\n\n  console.log(tags);\n  // ['1.0.1', '1.0.0', '0.1.0-beta']\n});\n\n// Also takes a repo location:\ngittags.get('/foorepo', function(err, tags) {});\n```\n\n**Latest**\n#### `gittags.latest([repo], callback(err, latest))`\n\n| Name                | Type            | Description                                     |\n| ------------------- | --------------- | ----------------------------------------------- |\n| `repo` *(optional)* | `string`        | Optional repo path. Defaults to `process.cwd()` |\n| `callback`          | `function`      | Required callback                               |\n| `err`               | `null \\| Error` | Error if, there is one                          |\n| `latest`            | `string`        | Latest semver tag found (e.g. `'1.0.1'`)        |\n\n```js\ngittags.latest(function(err, latest) {\n  console.log(latest);\n  // '1.0.1'\n});\n```\n\n**Oldest**\n#### `gittags.oldest([repo], callback(err, oldest))`\nSame as `latest` but opposite.\n```js\ngittags.oldest(function(err, oldest) {\n  console.log(oldest);\n  // '0.1.0-beta'\n});\n```\n\n**Semver Parse**\n\nTwo functions relating to semver exist for convenience. `parse` is just `semver.parse`, and `mmp` which stands for \"Major, Minor, Patch\". If you need more semver stuff, you should [use the node-semver module](https://github.com/npm/node-semver) directly.\n\n#### `gittags.parse(tag) -> SemVer`\n\n| Name  | Type     | Description         |\n| ----- | -------- | ------------------- |\n| `tag` | `string` | Version string to parse (e.g. `'v1.0.2-beta'`). See [node-semver](https://github.com/npm/node-semver) for more info. |\n\n#### `gittags.mmp(tag) -> formattedTag`\n\n| Name           | Type     | Description                                      |\n| -------------- | -------- | ------------------------------------------------ |\n| `tag`          | `string` | Tag to format (e.g. `'v1.0.2-beta'`)             |\n| `formattedTag` | `string` | Major.Minor.Patch formatted tag (e.g. `'1.0.2'`) |\n\n```js\ngittags.mmp('v1.3.10-beta.12');\n// => '1.3.10'\n\nvar version = gittags.parse('v1.3.10-beta.12');\n// <SemVer \"1.3.10-beta.12\">\nversion.prerelease;\n// ['beta', 12]\nversion.compare('v1.3.10');\n// -1\nversion.compare('v1.3.9');\n// 1\n// etc...\n```\n\n**Note**\nStating the obvious, this module uses the callback fashion of async handling. This makes them easy to integrate w/ promises.\n\n**Bluebird, for example**\n```js\nvar Q = require('bluebird');\nvar gittags = Q.promisifyAll(require('gittags'));\n\ngittags.latestAsync().then(console.log);\n// 1.0.1\n```\n\nI originally intended this to use `child_process.spawn` and return a stream, but I then realized these are blocking in Linux/Unix, limiting the usefulness of that. And it's Git tags so who cares?\n\nIf you want streams, you can use something like [highland.js](http://highlandjs.org/) which is awesome, BTW.\n\n## License\nMIT\n","maintainers":[{"name":"bfricka","email":"brian.frichette@gmail.com"}],"time":{"modified":"2017-05-24T04:24:48.440Z","created":"2014-09-20T07:30:24.077Z","0.2.2":"2014-09-20T07:30:24.077Z","0.2.3":"2014-09-20T07:56:59.873Z","0.2.4":"2014-10-31T03:47:21.242Z"},"homepage":"https://github.com/bfricka/node-git-tags","keywords":["Git","Tag","semver"],"repository":{"type":"git","url":"git@github.com:bfricka/node-git-tags.git"},"author":{"name":"Brian Frichette","email":"brian.frichette@gmail.com"},"bugs":{"url":"https://github.com/bfricka/node-git-tags/issues"},"license":"MIT","readmeFilename":"README.md","users":{"cslasher":true},"_attachments":{},"_etag":"W/\"59250b10-1ec9\"","_lastModified":"Wed, 24 May 2017 04:24:48 GMT","_cached":true}